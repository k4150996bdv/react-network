{"version":3,"sources":["Redux/dialogs-reducer.js","Redux/users-reducer.js","components/Navbar/Navbar.module.css","assets/images/pr.svg","api/api.js","serviceWorker.js","Redux/sidebar-reducer.js","Redux/auth-reducer.js","Redux/app-reducer.js","Redux/redux-store.js","components/Navbar/Navbar.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Header/loginForms.js","components/Header/login.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","App.js","index.js","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","components/common/Preloader/Preloader.js","components/Header/Header.module.css","Redux/profile-reducer.js"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","users","pageSize","totalItemsCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsers","dispatch","a","usersAPI","data","items","count","totalCount","follow","resultCode","unfollow","usersReducer","map","u","followed","filter","module","exports","instance","axios","withCredentials","baseURL","headers","get","then","response","post","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Boolean","window","location","hostname","match","sidebarReducer","isAuth","setAuthUserData","payload","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Navbar","className","n","navbar","item","to","activeClassName","active","News","Music","Settings","LoginReduxForm","reduxForm","props","log","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","required","error","styles","formSummaryError","connect","length","stopSubmit","_error","formData","Header","h","header","src","alt","loginBlock","onClick","HeaderContainer","this","React","Component","UsersContainer","lazy","ProfileContainer","DialogsContainer","App","initializeApp","fallback","Preloader","path","render","ReactDOM","document","getElementById","FormControl","input","meta","child","hasError","touched","formControl","children","Textarea","restProps","value","maxLengthCreator","maxLength","preloader","posts","likesCount","profile","addPostActionCreator","newPostText","setStatus","getUserProfile","newPost"],"mappings":"qJAEIA,EAAe,CACfC,QAAS,CACL,CAAEC,GAAI,EAAGC,KAAM,QACf,CAAED,GAAI,EAAGC,KAAM,SACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,UACf,CAAED,GAAI,EAAGC,KAAM,SAEnBC,SAAU,CACN,CAAEF,GAAI,EAAGG,QAAS,oBAClB,CAAEH,GAAI,EAAGG,QAAS,uBAClB,CAAEH,GAAI,EAAGG,QAAS,mCAClB,CAAEH,GAAI,EAAGG,QAAS,mCAClB,CAAEH,GAAI,EAAGG,QAAS,qBAgBbC,EAAqB,SAACC,GAAD,MAAqB,CAAEC,KA/BpC,eA+BwDD,mBAG9DE,IAfQ,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,IArBa,eAsBT,IAAII,EAAOD,EAAOJ,eAClB,OAAO,eACAG,EADP,CAEIN,SAAS,GAAD,mBAAMM,EAAMN,UAAZ,CAAsB,CAAEF,GAAI,EAAGG,QAASO,OAExD,QACI,OAAOF,K,8PClBfV,EAAe,CACfa,MAAO,GACPC,SAAU,EACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IAoDZC,EAAgB,SAACC,GAAD,MAAa,CAAEZ,KAlE7B,SAkE2CY,WAC7CC,EAAkB,SAACD,GAAD,MAAa,CAAEZ,KAlE7B,WAkE6CY,WAEjDE,EAAiB,SAACN,GAAD,MAAkB,CAAER,KAlEzB,mBAkEiDQ,gBAE7DO,EAAmB,SAACN,GAAD,MAAiB,CAAET,KAlExB,qBAkEkDS,eAChEO,EAA0B,SAACP,EAAYG,GAAb,MAAyB,CAAEZ,KAlE7B,+BAkEiES,aAAYG,WAErGK,EAAW,SAACT,EAAaF,GAAd,8CAA2B,WAAOY,GAAP,eAAAC,EAAA,6DAC/CD,EAASH,GAAiB,IADqB,SAE5BK,IAASH,SAAST,EAAaF,GAFH,OAEzCe,EAFyC,OAG/CH,EAASH,GAAiB,IAC1BG,EAVgC,CAAElB,KAlEpB,YAkEqCK,MAUjCgB,EAAKC,QACvBJ,EAASJ,EAAeN,IACxBU,EAVoD,CAAElB,KAlE5B,wBAkEyDuB,MAUvDF,EAAKG,aANc,2CAA3B,uDASXC,EAAS,SAACb,GAAD,8CAAY,WAAOM,GAAP,SAAAC,EAAA,6DAC9BD,EAASF,GAAwB,EAAMJ,IADT,SAEPQ,IAASK,OAAOb,GAFT,OAGE,GAHF,OAGjBS,KAAKK,YACdR,EAASP,EAAcC,IAE3BM,EAASF,GAAwB,EAAOJ,IANV,2CAAZ,uDASTe,EAAW,SAACf,GAAD,8CAAY,WAAOM,GAAP,SAAAC,EAAA,6DAChCD,EAASF,GAAwB,EAAMJ,IADP,SAETQ,IAASO,SAASf,GAFT,OAGA,GAHA,OAGnBS,KAAKK,YACdR,EAASL,EAAgBD,IAE7BM,EAASF,GAAwB,EAAOJ,IANR,2CAAZ,uDASTgB,IApFM,WAAmC,IAAlC1B,EAAiC,uDAAzBV,EAAcW,EAAW,uCACnD,OAAQA,EAAOH,MACX,IAnBO,SAoBH,OAAO,eACAE,EADP,CAEIG,MAAOH,EAAMG,MAAMwB,KAAI,SAAAC,GACnB,OAAIA,EAAEpC,KAAOS,EAAOS,OACT,eAAKkB,EAAZ,CAAeC,UAAU,IAEtBD,OAInB,IA7BS,WA8BL,OAAO,eACA5B,EADP,CAEIG,MAAOH,EAAMG,MAAMwB,KAAI,SAAAC,GACnB,OAAIA,EAAEpC,KAAOS,EAAOS,OACT,eAAKkB,EAAZ,CAAeC,UAAU,IAEtBD,OAInB,IAvCU,YAwCN,OAAO,eAAK5B,EAAZ,CAAmBG,MAAOF,EAAOE,QAErC,IAzCiB,mBA0Cb,OAAO,eAAKH,EAAZ,CAAmBM,YAAaL,EAAOK,cAE3C,IA3CsB,wBA4ClB,OAAO,eAAKN,EAAZ,CAAmBK,gBAAiBJ,EAAOoB,QAE/C,IA7CmB,qBA8Cf,OAAO,eAAKrB,EAAZ,CAAmBO,WAAYN,EAAOM,aAE1C,IA/C6B,+BAgDzB,OAAO,eACAP,EADP,CAEIQ,oBAAqBP,EAAOM,WAAP,sBACXP,EAAMQ,qBADK,CACgBP,EAAOS,SACtCV,EAAMQ,oBAAoBsB,QAAO,SAAAtC,GAAE,OAAIA,GAAMS,EAAOS,YAGlE,QACI,OAAOV,K,mBC/DnB+B,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,OAAS,yB,oBCDvFD,EAAOC,QAAU,IAA0B,gC,sECA3C,mHAEMC,EAAWC,SAAa,CAC5BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACP,UAAW,0CAIFnB,EAAW,CACtBH,SADsB,SACbT,EAAaF,GACpB,OAAO6B,EACJK,IADI,qBACchC,EADd,kBACmCF,IACvCmC,MAAK,SAACC,GACL,OAAOA,EAASrB,SAGtBI,OARsB,SAQfb,GACL,OAAOuB,EAASQ,KAAT,iBACK/B,KAGde,SAbsB,SAabf,GACP,OAAOuB,EAASS,OAAT,iBACKhC,KAGdiC,WAlBsB,SAkBXjC,GAET,OADAkC,QAAQC,KAAK,mDACNC,EAAWH,WAAWjC,KAIpBoC,EAAa,CACxBH,WADwB,SACbjC,GACT,OAAOuB,EAASK,IAAT,kBAAwB5B,KAEjCqC,UAJwB,SAIdrC,GACR,OAAOuB,EAASK,IAAT,yBAA+B5B,KAExCsC,aAPwB,SAOXC,GACf,OAAOhB,EAASiB,IAAT,iBAA+B,CAACD,OAAQA,MAIlCE,EAAU,CACrBC,GADqB,WAEnB,OAAOnB,EAASK,IAAT,YAETe,MAJqB,SAIfC,EAAOC,GAA+B,IAArBC,EAAoB,wDACzC,OAAOvB,EAASQ,KAAT,aAA4B,CAACa,QAAOC,WAASC,gBAEtDC,OAPqB,WAQnB,OAAOxB,EAASS,OAAT,iB,oFC1CSgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,4BClBFxE,EAAe,GAMJyE,EAJQ,WAAmC,IAAlC/D,EAAiC,uDAAzBV,EAAyB,iCACrD,OAAOU,G,wDCGPV,EAAe,CACfoB,OAAQ,KACR4C,MAAO,KACPC,SAAU,KACVF,MAAO,KACPW,QAAQ,GAeCC,EAAkB,SAACvD,EAAQ4C,EAAOD,EAAOW,GAAvB,MAAmC,CAAElE,KAtB9C,gBAsBmEoE,QAAS,CAAExD,SAAQ4C,QAAOD,QAAOW,YAG7GG,EAAkB,yDAAM,WAAOnD,GAAP,uBAAAC,EAAA,sEACZkC,IAAQC,KADI,OAEI,KADjCZ,EAD6B,QAEhBrB,KAAKK,aAAmB,EACNgB,EAASrB,KAAKA,KAAnC3B,EAD0B,EAC1BA,GAAI8D,EADsB,EACtBA,MAAOD,EADe,EACfA,MACjBrC,EAASiD,EAAgBzE,EAAI8D,EAAOD,GAAO,KAJlB,2CAAN,uDAyBhBe,EAxCK,WAAmC,IAAlCpE,EAAiC,uDAAzBV,EAAcW,EAAW,uCAClD,OAAQA,EAAOH,MACX,IAZc,gBAaV,OAAO,eACAE,EADP,GAEOC,EAAOiE,SAElB,QACI,OAAOlE,I,kBClBfV,EAAe,CAChB+E,aAAa,GA0BDC,EAvBI,WAAmC,IAAlCtE,EAAiC,uDAAzBV,EAAcW,EAAW,uCACjD,OAAQA,EAAOH,MACX,IARmB,qBASf,OAAO,eACAE,EADP,CAEIqE,aAAa,IAErB,QACI,OAAOrE,ICNfuE,EAAWC,YAAgB,CAC3BC,YAAaC,IACbC,YAAa5E,IACb6E,QAASb,EACTc,UAAWnD,IACXoD,KAAMV,EACNW,IAAKT,EACLU,KAAMC,MAKJC,EAAmBvB,OAAOwB,sCAAwCC,IAGzDC,EAFDC,YAAYf,EAAUW,EAAkBK,YAAgBC,O,4GCMvDC,EAzBA,WACb,OACE,yBAAKC,UAAWC,IAAEC,QAChB,yBAAKF,UAAWC,IAAEE,MAChB,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,QAA1C,YAEF,yBAAKN,UAAWC,IAAEE,MAChB,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,QAAxC,UAEF,yBAAKN,UAAWC,IAAEE,MAChB,kBAAC,IAAD,CAASC,GAAG,WAAWC,gBAAiBJ,IAAEK,QAA1C,aAEF,yBAAKN,UAAWC,IAAEE,MAChB,kBAAC,IAAD,CAASC,GAAG,QAAQC,gBAAiBJ,IAAEK,QAAvC,SAEF,yBAAKN,UAAWC,IAAEE,MAChB,kBAAC,IAAD,CAASC,GAAG,SAASC,gBAAiBJ,IAAEK,QAAxC,UAEF,yBAAKN,UAAWC,IAAEE,MAChB,kBAAC,IAAD,CAASC,GAAG,YAAYC,gBAAiBJ,IAAEK,QAA3C,e,QCZOC,EARF,WACT,OACI,iDCGOC,EAND,WACV,OACI,oDCKOC,EANE,WACb,OACI,kD,4ECyBOC,EAFQC,YAAU,CAAErB,KAAM,SAAlBqB,EAtBL,SAACC,GAEf,OADA1D,QAAQ2D,IAAID,GAER,0BAAME,SAAUF,EAAMG,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,YAAa,QAASlH,KAAM,QAASmH,UAAWC,IAAOC,SAAU,CAACC,QAE7E,6BACI,kBAACL,EAAA,EAAD,CAAOC,YAAa,WAAYlH,KAAM,WAAYK,KAAM,WAAY8G,UAAWC,IAAOC,SAAU,CAACC,QAErG,6BACI,kBAACL,EAAA,EAAD,CAAO5G,KAAM,WAAYL,KAAM,aAAcmH,UAAWC,MAD5D,gBAGCP,EAAMU,OAAS,yBAAKtB,UAAWuB,IAAOC,kBAClCZ,EAAMU,OAEX,6BACI,8CCHDG,eAdO,SAACnH,GAAD,MAAY,CAAEgE,OAAQhE,EAAM8E,KAAKd,UAcf,CAAEX,MRiBrB,SAACC,EAAOC,EAAUC,GAAlB,8CAAiC,WAAOxC,GAAP,iBAAAC,EAAA,sEAC9BkC,IAAQE,MAAMC,EAAOC,EAAUC,GADD,OAEb,KADlChB,EAD+C,QAEjCrB,KAAKK,WACdR,EAASmD,MAGNxE,EAAU6C,EAASrB,KAAKzB,SAAS0H,OAAS,EAAI5E,EAASrB,KAAKzB,SAAS,GAAK,aAC7EsB,EAASqG,YAAY,QAAS,CAAEC,OAAQ3H,MAPE,2CAAjC,wDQjBNwH,EAZD,SAACb,GAIX,OAAqB,IAAjBA,EAAMtC,OAAwB,kBAAC,IAAD,CAAU8B,GAAI,aACzC,6BACH,qCACA,kBAAC,EAAD,CAAgBU,SANH,SAACe,GACdjB,EAAMjD,MAAMkE,EAASjE,MAAOiE,EAAShE,SAAUgE,EAAS/D,mBCWjDgE,EAdA,SAAClB,GACZ,OACI,4BAAQZ,UAAW+B,IAAEC,QACjB,yBAAKC,IAAI,+IAA+IC,IAAK,SAE7J,yBAAKlC,UAAW+B,IAAEI,YACbvB,EAAMtC,OACD,kCAAQsC,EAAMjD,MAAd,IAAqB,4BAAQyE,QAASxB,EAAM7C,QAAvB,YAArB,KACA,kBAAC,IAAD,CAASqC,GAAG,UAAZ,IAAsB,kBAAC,EAAD,MAAtB,QCVhBiC,G,uKAGE,OAAO,kBAAC,EAAWC,KAAK1B,W,GAHF2B,IAAMC,WAarBf,gBANS,SAACnH,GAAD,MAAY,CAChCgE,OAAQhE,EAAM8E,KAAKd,OACnBX,MAAOrD,EAAM8E,KAAKzB,SAImB,CAAEI,OV6BrB,yDAAM,WAAOzC,GAAP,SAAAC,EAAA,sEACFkC,IAAQM,SADN,OAEa,IAFb,OAEPtC,KAAKK,YACdR,EAASiD,EAAgB,KAAM,KAAM,MAAM,IAH3B,2CAAN,wDU7BPkD,CAAwCY,I,SCLjDI,GAAiBF,IAAMG,MAAK,kBAAM,iCAClCC,GAAmBJ,IAAMG,MAAK,kBAAM,iCACpCE,GAAmBL,IAAMG,MAAK,kBAAM,iCAEpCG,G,kLAEFP,KAAK1B,MAAMkC,kB,+BAGX,OAAKR,KAAK1B,MAAMjC,YAIhB,kBAAC,IAAD,KACE,yBAAKqB,UAAU,eACb,kBAAC,GAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,uBAEf,kBAAC,WAAD,CAAU+C,SAAW,kBAACC,GAAA,EAAD,OACrB,kBAAC,IAAD,CAAOC,KAAK,WAAWC,OAAQ,kBAAM,kBAACN,GAAD,SACrC,kBAAC,IAAD,CAAOK,KAAK,SAASC,OAAQ,kBAAM,kBAACT,GAAD,SACnC,kBAAC,IAAD,CAAOQ,KAAK,oBAAoBC,OAAQ,kBAAM,kBAACP,GAAD,SAC9C,kBAAC,IAAD,CAAOM,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,EAAD,SAClC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,SACnC,kBAAC,IAAD,CAAOD,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,EAAD,SACtC,kBAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,aAhBhC,kBAACF,GAAA,EAAD,U,GANOT,IAAMC,WAqCTf,gBALS,SAACnH,GAAD,MAAY,CAClCqE,YAAarE,EAAM+E,IAAIV,eAIe,CAAEmE,cV/Bb,kBAAM,SAACxH,GACZA,EAASmD,KAClB5B,MAAK,WACZvB,EANgC,CAAElB,KAlBf,6BUoDZqH,CAA6CoB,I,OC1C1DM,IAASD,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUvD,MAAOA,GACf,kBAAC,GAAD,QAEcyD,SAASC,eAAe,U,mBChB9ChH,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,0C,iJCErHgH,EAAc,SAAC,GAAqC,EAAnCC,MAAoC,IAA7BC,EAA4B,EAA5BA,KAAgB5C,GAAY,EAAtB6C,MAAsB,yCAChDC,EAAWF,EAAKG,SAAWH,EAAKlC,MACtC,OACI,yBAAKtB,UAAY0D,GAAYnC,IAAOqC,YAAc,IAAMrC,IAAOD,OAC3D,6BACKV,EAAMiD,UAEVH,GAAY,kCAAQF,EAAKlC,MAAb,OAKZwC,EAAW,SAAClD,GAAW,IAC1B2C,EAAqC3C,EAArC2C,MAAuBQ,GAAcnD,EAA9B4C,KAA8B5C,EAAxB6C,MADY,YACY7C,EADZ,2BAE/B,OACG,kBAAC0C,EAAgB1C,EAAjB,IAAyB,8CAAc2C,EAAWQ,IAAlD,MAGM5C,EAAQ,SAACP,GAAW,IACrB2C,EAAqC3C,EAArC2C,MAAuBQ,GAAcnD,EAA9B4C,KAA8B5C,EAAxB6C,MADO,YACiB7C,EADjB,2BAE5B,OACG,kBAAC0C,EAAgB1C,EAAjB,IAAyB,2CAAW2C,EAAWQ,IAA/C,O,gCCxBP,oEAAO,IAAM1C,EAAW,SAAC2C,GACrB,OAAIA,OAAO,EACC,qBAGHC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,OAAIA,EAAMtC,OAASwC,EAAiB,iBAAN,OAAwBA,EAAxB,iBACzB,K,gCCPT,sCAUelB,IAPC,WACZ,OAAO,6BACH,yBAAKf,IAAKkC,S,mBCJlB9H,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,6B,2NCK3D1C,EAAe,CACfwK,MAAO,CACH,CAAEtK,GAAI,EAAGG,QAAS,WAAYoK,WAAY,IAC1C,CAAEvK,GAAI,EAAGG,QAAS,eAAgBoK,WAAY,IAElDC,QAAS,KACT/G,OAAQ,IA4BCgH,EAAuB,SAACC,GAAD,MAAkB,CAAEpK,KAtCvC,WAsCuDoK,gBAE3DC,EAAa,SAAAlH,GAAM,MAAK,CAAEnD,KAtCpB,aAsCsCmD,OAAQA,IAEpDmH,EAAiB,SAAC1J,GAAD,8CAAY,WAAOM,GAAP,eAAAC,EAAA,sEAChBC,IAASyB,WAAWjC,GADJ,OACjC8B,EADiC,OAElCxB,EALoC,CAAElB,KAtCrB,mBAsC6CkK,QAKtCxH,EAASrB,OAFC,2CAAZ,uDAIjB4B,EAAY,SAACrC,GAAD,8CAAY,WAAOM,GAAP,eAAAC,EAAA,sEACX6B,IAAWC,UAAUrC,GADV,OAC5B8B,EAD4B,OAE7BxB,EAASmJ,EAAU3H,EAASrB,OAFC,2CAAZ,uDAKZ6B,EAAe,SAACC,GAAD,8CAAY,WAAOjC,GAAP,SAAAC,EAAA,sEACb6B,IAAWE,aAAaC,GADX,OAEC,IAFD,OAEnB9B,KAAKK,YACdR,EAASmJ,EAAUlH,IAHS,2CAAZ,uDAMbyB,IA5CQ,WAAmC,IAAlC1E,EAAiC,uDAAzBV,EAAcW,EAAW,uCACrD,OAAQA,EAAOH,MACX,IAfS,WAgBL,IAAIuK,EAAU,CACV7K,GAAI,EACJG,QAASM,EAAOiK,YAChBH,WAAY,GAEhB,OAAO,eACA/J,EADP,CAEI8J,MAAM,GAAD,mBAAM9J,EAAM8J,OAAZ,CAAmBO,IACxBH,YAAa,KAGrB,IA1BiB,mBA2Bb,OAAO,eAAKlK,EAAZ,CAAmBgK,QAAS/J,EAAO+J,UAEvC,IA5BW,aA6BP,OAAO,eAAKhK,EAAZ,CAAmBiD,OAAQhD,EAAOgD,SAEtC,QACI,OAAOjD,M","file":"static/js/main.b4188db9.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: \"Dima\" },\r\n        { id: 2, name: \"Sasha\" },\r\n        { id: 3, name: \"Juliya\" },\r\n        { id: 4, name: \"Ivanka\" },\r\n        { id: 5, name: \"Igor\" },\r\n    ],\r\n    messages: [\r\n        { id: 1, message: \"Hi, how are you?\" },\r\n        { id: 2, message: \"Do you speak Russia\" },\r\n        { id: 3, message: \"Did you go to work last friday?\" },\r\n        { id: 4, message: \"Did you go to work last friday?\" },\r\n        { id: 5, message: \"Do you love me?\" },\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const sendMessageCreator = (newMessageBody) => ({ type: SEND_MESSAGE, newMessageBody })\r\n\r\n\r\nexport default dialogsReducer;","import { usersAPI } from '../api/api';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLIWING_PROGRESS = \"TOGGLE_IS_FOLLIWING_PROGRESS\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalItemsCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_USERS_TOTAL_COUNT: {\r\n            return { ...state, totalItemsCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLIWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage })\r\nexport const setTotalUsersCount = (totalItemsCount) => ({ type: SET_USERS_TOTAL_COUNT, count: totalItemsCount })\r\nexport const toggleIsFetching = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching })\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({ type: TOGGLE_IS_FOLLIWING_PROGRESS, isFetching, userId })\r\n\r\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    const data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetching(false));\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setCurrentPage(currentPage))\r\n    dispatch(setTotalUsersCount(data.totalCount));\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await usersAPI.follow(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(followSuccess(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    const response = await usersAPI.unfollow(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch(unfollowSuccess(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport default usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__1lI-P\",\"item\":\"Navbar_item__s8YM-\",\"active\":\"Navbar_active__1tN1o\"};","module.exports = __webpack_public_path__ + \"static/media/pr.cf29e479.svg\";","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n  headers: {\r\n    \"API-KEY\": \"1cb7174d-9f99-4924-81ba-4e0a5351c091\",\r\n  },\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage, pageSize) {\r\n    return instance\r\n      .get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then((response) => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId) {\r\n    return instance.post(\r\n      `follow/${userId}`\r\n    );\r\n  },\r\n  unfollow(userId) {\r\n    return instance.delete(\r\n      `follow/${userId}`\r\n    );\r\n  },\r\n  getProfile(userId) {\r\n    console.warn(\"Obsolete method. Please use Profile API Object.\")\r\n    return profileAPI.getProfile(userId)\r\n  },\r\n \r\n};\r\nexport const profileAPI = {\r\n  getProfile(userId) {\r\n    return instance.get(`profile/${userId}`);\r\n  },\r\n  getStatus(userId) {\r\n    return instance.get(`profile/status/${userId}`)\r\n  },\r\n  updateStatus(status) {\r\nreturn instance.put(`profile/status`, {status: status})\r\n  }\r\n};\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login(email, password, rememberMe = false) {\r\n    return instance.post(`auth/login`, {email, password,rememberMe})\r\n  }, \r\n  logout() {\r\n    return instance.delete(`auth/login`)\r\n  }, \r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","\r\nimport { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    email: null,\r\n    password: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n             }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({ type: SET_USER_DATA, payload: { userId, email, login, isAuth } })\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  const response = await authAPI.me()\r\n        if (response.data.resultCode === 0) {\r\n            let { id, email, login } = response.data.data;\r\n            dispatch(setAuthUserData(id, email, login, true));\r\n        }\r\n};\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n const response = await authAPI.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData() )\r\n        }\r\n        else {\r\n           let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\"\r\n            dispatch(stopSubmit (\"login\", { _error: message }));\r\n        }\r\n}\r\nexport const logout = () => async (dispatch) => {\r\n   const response = await authAPI.logout()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setAuthUserData(null, null, null, false)\r\n            )}\r\n}\r\n\r\nexport default authReducer;","import { getAuthUserData } from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCES = 'INITIALIZED_SUCCES';\r\n\r\nlet initialState = {\r\n   initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCES:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n             }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSucces = () => ({ type: INITIALIZED_SUCCES })\r\n\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n       const promise =  dispatch(getAuthUserData());\r\n       promise.then(() => {\r\n        dispatch(initializedSucces());\r\n       }) \r\n\r\n}\r\n\r\nexport default appReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport {reducer as formReducer} from \"redux-form\";\r\nimport appReducer from './app-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer ,\r\n    form: formReducer,\r\n    \r\n    \r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers (applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport n from './Navbar.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className={n.navbar} >\r\n      <div className={n.item}>\r\n        <NavLink to=\"/profile\" activeClassName={n.active}>Profile</NavLink>\r\n      </div>\r\n      <div className={n.item}>\r\n        <NavLink to=\"/users\" activeClassName={n.active}>Users</NavLink>\r\n      </div>\r\n      <div className={n.item}>\r\n        <NavLink to=\"/dialogs\" activeClassName={n.active}>Messages</NavLink>\r\n      </div>\r\n      <div className={n.item}>\r\n        <NavLink to=\"/news\" activeClassName={n.active}>News</NavLink>\r\n      </div>\r\n      <div className={n.item}>\r\n        <NavLink to=\"/music\" activeClassName={n.active}>Music</NavLink>\r\n      </div>\r\n      <div className={n.item}>\r\n        <NavLink to=\"/settings\" activeClassName={n.active}>Settings</NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            New information\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>Music will be here</div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>This is settings</div>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required } from \"../../utils/validators/validators\";\r\nimport { Input } from \"../common/FormsControls/FormsControls\";\r\nimport styles from \"../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst LoginForm = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field placeholder={\"Email\"} name={\"email\"} component={Input} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder={\"Password\"} name={\"password\"} type={\"password\"} component={Input} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field type={\"checkbox\"} name={\"rememberMe\"} component={Input} /> remember me\r\n            </div>\r\n            {props.error && <div className={styles.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst LoginReduxForm = reduxForm({ form: \"login\" })(LoginForm)\r\n\r\nexport default LoginReduxForm;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LoginReduxForm from \"./loginForms\";\r\nimport { login } from \"../../Redux/auth-reducer\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nlet mapStateToProps = (state) => ({ isAuth: state.auth.isAuth })\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth === true) return <Redirect to={\"/profile\"} />\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport h from './Header.module.css';\r\nimport Login from './login';\r\n \r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={h.header}>\r\n            <img src=\"https://previews.123rf.com/images/ppbig/ppbig1805/ppbig180501422/106633535-social-network-global-communication-network-connecting-people.jpg\" alt={\"logo\"}/>\r\n\r\n            <div className={h.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>  {props.login} <button onClick={props.logout}> Log out</button> </div>\r\n                    : <NavLink to=\"/login\"> <Login /> </NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout} from '../../Redux/auth-reducer'\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    render () {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\n\r\nexport default connect (mapStateToProps, { logout } ) (HeaderContainer) ;\r\n\r\n","import React, { Suspense }  from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport { Route, BrowserRouter, withRouter } from 'react-router-dom';\r\nimport News from './components/News/News';\r\nimport Music from './components/Music/Music';\r\nimport Settings from './components/Settings/Settings';\r\n// import ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Header/login';\r\nimport { connect } from 'react-redux';\r\nimport {initializeApp} from './Redux/app-reducer';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer')); \r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer')); \r\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer')); \r\n\r\nclass App extends React.Component {\r\n  componentDidMount() {\r\n    this.props.initializeApp()\r\n }\r\n  render() {\r\n    if (!this.props.initialized){\r\n    return <Preloader /> \r\n  }\r\n    return (\r\n    <BrowserRouter>\r\n      <div className=\"app-wrapper\">\r\n        <HeaderContainer />\r\n        <Navbar />\r\n        <div className=\"app-wrapper-content\">\r\n        \r\n        <Suspense fallback={ <Preloader /> }>\r\n        <Route path=\"/dialogs\" render={() => <DialogsContainer />} />\r\n        <Route path=\"/users\" render={() => <UsersContainer />} />\r\n        <Route path=\"/profile/:userId?\" render={() => <ProfileContainer />} />\r\n        <Route path=\"/news\" render={() => <News />} />\r\n        <Route path=\"/music\" render={() => <Music />} />\r\n        <Route path=\"/settings\" render={() => <Settings />} />\r\n        <Route path=\"/login\" render={() => <Login /> } />\r\n        </Suspense >\r\n  \r\n        </div>\r\n      </div>  \r\n    </BrowserRouter> \r\n  );\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, { initializeApp }) (App) \r\n","import * as serviceWorker from './serviceWorker';\r\nimport store from './Redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\n\r\n  ReactDOM.render(\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>, document.getElementById('root'));\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__39kQb\",\"error\":\"FormsControls_error__1xzkL\",\"formSummaryError\":\"FormsControls_formSummaryError__2JN55\"};","import React from \"react\"\r\nimport styles from \"./FormsControls.module.css\"\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={ hasError && styles.formControl + \" \" + styles.error}>\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n            {hasError && <span> {meta.error} </span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const { input, meta, child, ...restProps } = props;\r\n    return (\r\n       <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n    )\r\n}\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return (\r\n       <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n    )\r\n}\r\n\r\n","export const required = (value) => {\r\n    if (value) return undefined\r\n    else return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`\r\n    else return undefined\r\n}\r\n\r\n\r\n// export const maxLength30 = (value) => {\r\n//     if (value.length > 30) return \"Max length is 30 symbols\"\r\n//     else return undefined\r\n// }\r\n\r\n","import React from 'react';\r\nimport preloader from '../../../assets/images/pr.svg';\r\n\r\nlet Preloader = () => {\r\n    return <div>\r\n        <img src={preloader} />\r\n    </div>\r\n}\r\n\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2yYoF\",\"loginBlock\":\"Header_loginBlock__3Fmc9\"};","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: \"Hi, Dima\", likesCount: 12 },\r\n        { id: 2, message: \"How are you?\", likesCount: 1 },\r\n    ],\r\n    profile: null,\r\n    status: \"\",\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n        case SET_STATUS: {\r\n            return { ...state, status: action.status }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\nexport const setStatus = (status => ({ type: SET_STATUS, status: status }))\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n   const response = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n   const response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    const response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status))\r\n        }\r\n}\r\nexport default profileReducer;"],"sourceRoot":""}