{"ast":null,"code":"import React from 'react';\nimport { connect } from 'react-redux';\nimport { followAC, setUsersAC, unfollowAC } from '../../Redux/users-reducer';\nimport Users from './Users';\n\nlet mapStateToProps = state => {\n  users: state.usersPage.users;\n}; // mapStateToProps - функция, которая принимает весь стейт целиком и возвращает обьект только с теми данными, которые нам из стейта нужны\n\n\nlet mapDispatchToProps = dispatch => {\n  // Передает дочерней компоненте через пропсы колбеки (функции, которая презентационная компонента может вызывать)\n  return {\n    follow: userId => {\n      dispatch(followAC(userId)); //диспачим экшнкриейтор и указываем пользователя, которого нужно зафоловить\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);","map":{"version":3,"sources":["E:/Dima/React/april/src/components/Users/UsersContainer.jsx"],"names":["React","connect","followAC","setUsersAC","unfollowAC","Users","mapStateToProps","state","users","usersPage","mapDispatchToProps","dispatch","follow","userId","unfollow","setUsers"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,2BAAjD;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD,KAAhB;AACV,CAFD,C,CAEI;;;AAEJ,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AAAO;AAC1C,SAAO;AACHC,IAAAA,MAAM,EAAGC,MAAD,IAAY;AAChBF,MAAAA,QAAQ,CAACT,QAAQ,CAACW,MAAD,CAAT,CAAR,CADgB,CACe;AAClC,KAHE;AAIHC,IAAAA,QAAQ,EAAGD,MAAD,IAAY;AAClBF,MAAAA,QAAQ,CAACP,UAAU,CAACS,MAAD,CAAX,CAAR;AACH,KANE;AAOHE,IAAAA,QAAQ,EAAGP,KAAD,IAAW;AACjBG,MAAAA,QAAQ,CAACR,UAAU,CAACK,KAAD,CAAX,CAAR;AACH;AATE,GAAP;AAaH,CAdD;;AAgBA,eAAeP,OAAO,CAAEK,eAAF,EAAmBI,kBAAnB,CAAP,CAA8CL,KAA9C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { followAC, setUsersAC, unfollowAC } from '../../Redux/users-reducer';\r\nimport Users from './Users';\r\n\r\nlet mapStateToProps = (state) => {\r\n    users: state.usersPage.users\r\n}   // mapStateToProps - функция, которая принимает весь стейт целиком и возвращает обьект только с теми данными, которые нам из стейта нужны\r\n\r\nlet mapDispatchToProps = (dispatch) => {      // Передает дочерней компоненте через пропсы колбеки (функции, которая презентационная компонента может вызывать)\r\n    return {\r\n        follow: (userId) => {\r\n            dispatch(followAC(userId));    //диспачим экшнкриейтор и указываем пользователя, которого нужно зафоловить\r\n        },\r\n        unfollow: (userId) => {\r\n            dispatch(unfollowAC(userId));   \r\n        },\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));   \r\n        },\r\n        \r\n    }\r\n\r\n} \r\n\r\nexport default connect (mapStateToProps, mapDispatchToProps)(Users);"]},"metadata":{},"sourceType":"module"}